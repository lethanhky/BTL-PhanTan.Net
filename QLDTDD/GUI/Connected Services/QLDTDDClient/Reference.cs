//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GUI.QLDTDDClient {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="eAccount", Namespace="http://schemas.datacontract.org/2004/07/Entities")]
    [System.SerializableAttribute()]
    public partial class eAccount : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PassWordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccId {
            get {
                return this.AccIdField;
            }
            set {
                if ((this.AccIdField.Equals(value) != true)) {
                    this.AccIdField = value;
                    this.RaisePropertyChanged("AccId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PassWord {
            get {
                return this.PassWordField;
            }
            set {
                if ((object.ReferenceEquals(this.PassWordField, value) != true)) {
                    this.PassWordField = value;
                    this.RaisePropertyChanged("PassWord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="eEmployee", Namespace="http://schemas.datacontract.org/2004/07/Entities")]
    [System.SerializableAttribute()]
    public partial class eEmployee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccId {
            get {
                return this.AccIdField;
            }
            set {
                if ((this.AccIdField.Equals(value) != true)) {
                    this.AccIdField = value;
                    this.RaisePropertyChanged("AccId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmpID {
            get {
                return this.EmpIDField;
            }
            set {
                if ((this.EmpIDField.Equals(value) != true)) {
                    this.EmpIDField = value;
                    this.RaisePropertyChanged("EmpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Position {
            get {
                return this.PositionField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionField, value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="eImportCoupon", Namespace="http://schemas.datacontract.org/2004/07/Entities")]
    [System.SerializableAttribute()]
    public partial class eImportCoupon : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ImpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ImpdetailDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmpID {
            get {
                return this.EmpIDField;
            }
            set {
                if ((this.EmpIDField.Equals(value) != true)) {
                    this.EmpIDField = value;
                    this.RaisePropertyChanged("EmpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ImpID {
            get {
                return this.ImpIDField;
            }
            set {
                if ((this.ImpIDField.Equals(value) != true)) {
                    this.ImpIDField = value;
                    this.RaisePropertyChanged("ImpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ImpdetailDate {
            get {
                return this.ImpdetailDateField;
            }
            set {
                if ((this.ImpdetailDateField.Equals(value) != true)) {
                    this.ImpdetailDateField = value;
                    this.RaisePropertyChanged("ImpdetailDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="eImportCouponDetail", Namespace="http://schemas.datacontract.org/2004/07/Entities")]
    [System.SerializableAttribute()]
    public partial class eImportCouponDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ImpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ImpdetailIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ImpID {
            get {
                return this.ImpIDField;
            }
            set {
                if ((this.ImpIDField.Equals(value) != true)) {
                    this.ImpIDField = value;
                    this.RaisePropertyChanged("ImpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ImpdetailID {
            get {
                return this.ImpdetailIDField;
            }
            set {
                if ((this.ImpdetailIDField.Equals(value) != true)) {
                    this.ImpdetailIDField = value;
                    this.RaisePropertyChanged("ImpdetailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="eOrder", Namespace="http://schemas.datacontract.org/2004/07/Entities")]
    [System.SerializableAttribute()]
    public partial class eOrder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CusNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CusName {
            get {
                return this.CusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CusNameField, value) != true)) {
                    this.CusNameField = value;
                    this.RaisePropertyChanged("CusName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmpID {
            get {
                return this.EmpIDField;
            }
            set {
                if ((this.EmpIDField.Equals(value) != true)) {
                    this.EmpIDField = value;
                    this.RaisePropertyChanged("EmpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpName {
            get {
                return this.EmpNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpNameField, value) != true)) {
                    this.EmpNameField = value;
                    this.RaisePropertyChanged("EmpName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OrderDate {
            get {
                return this.OrderDateField;
            }
            set {
                if ((this.OrderDateField.Equals(value) != true)) {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderID {
            get {
                return this.OrderIDField;
            }
            set {
                if ((this.OrderIDField.Equals(value) != true)) {
                    this.OrderIDField = value;
                    this.RaisePropertyChanged("OrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="eOrderDetail", Namespace="http://schemas.datacontract.org/2004/07/Entities")]
    [System.SerializableAttribute()]
    public partial class eOrderDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DetailIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TeleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double UnitpriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DetailID {
            get {
                return this.DetailIDField;
            }
            set {
                if ((this.DetailIDField.Equals(value) != true)) {
                    this.DetailIDField = value;
                    this.RaisePropertyChanged("DetailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderID {
            get {
                return this.OrderIDField;
            }
            set {
                if ((this.OrderIDField.Equals(value) != true)) {
                    this.OrderIDField = value;
                    this.RaisePropertyChanged("OrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TeleID {
            get {
                return this.TeleIDField;
            }
            set {
                if ((this.TeleIDField.Equals(value) != true)) {
                    this.TeleIDField = value;
                    this.RaisePropertyChanged("TeleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Unitprice {
            get {
                return this.UnitpriceField;
            }
            set {
                if ((this.UnitpriceField.Equals(value) != true)) {
                    this.UnitpriceField = value;
                    this.RaisePropertyChanged("Unitprice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="eTelephone", Namespace="http://schemas.datacontract.org/2004/07/Entities")]
    [System.SerializableAttribute()]
    public partial class eTelephone : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ImpdetailIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProviderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TeleIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ImpdetailID {
            get {
                return this.ImpdetailIDField;
            }
            set {
                if ((this.ImpdetailIDField.Equals(value) != true)) {
                    this.ImpdetailIDField = value;
                    this.RaisePropertyChanged("ImpdetailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Provider {
            get {
                return this.ProviderField;
            }
            set {
                if ((object.ReferenceEquals(this.ProviderField, value) != true)) {
                    this.ProviderField = value;
                    this.RaisePropertyChanged("Provider");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TeleID {
            get {
                return this.TeleIDField;
            }
            set {
                if ((this.TeleIDField.Equals(value) != true)) {
                    this.TeleIDField = value;
                    this.RaisePropertyChanged("TeleID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="QLDTDDClient.IQLDTDDServices")]
    public interface IQLDTDDServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/InsertAccount", ReplyAction="http://tempuri.org/IQLDTDDServices/InsertAccountResponse")]
        int InsertAccount(GUI.QLDTDDClient.eAccount ac);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/InsertAccount", ReplyAction="http://tempuri.org/IQLDTDDServices/InsertAccountResponse")]
        System.Threading.Tasks.Task<int> InsertAccountAsync(GUI.QLDTDDClient.eAccount ac);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/getAccidbyUsername", ReplyAction="http://tempuri.org/IQLDTDDServices/getAccidbyUsernameResponse")]
        string getAccidbyUsername(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/getAccidbyUsername", ReplyAction="http://tempuri.org/IQLDTDDServices/getAccidbyUsernameResponse")]
        System.Threading.Tasks.Task<string> getAccidbyUsernameAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/CheckIsExistAccount", ReplyAction="http://tempuri.org/IQLDTDDServices/CheckIsExistAccountResponse")]
        bool CheckIsExistAccount(int accid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/CheckIsExistAccount", ReplyAction="http://tempuri.org/IQLDTDDServices/CheckIsExistAccountResponse")]
        System.Threading.Tasks.Task<bool> CheckIsExistAccountAsync(int accid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/DeleteAccount", ReplyAction="http://tempuri.org/IQLDTDDServices/DeleteAccountResponse")]
        void DeleteAccount(int accid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/DeleteAccount", ReplyAction="http://tempuri.org/IQLDTDDServices/DeleteAccountResponse")]
        System.Threading.Tasks.Task DeleteAccountAsync(int accid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/getAllEmployee", ReplyAction="http://tempuri.org/IQLDTDDServices/getAllEmployeeResponse")]
        GUI.QLDTDDClient.eEmployee[] getAllEmployee();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/getAllEmployee", ReplyAction="http://tempuri.org/IQLDTDDServices/getAllEmployeeResponse")]
        System.Threading.Tasks.Task<GUI.QLDTDDClient.eEmployee[]> getAllEmployeeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/inSertEmployee", ReplyAction="http://tempuri.org/IQLDTDDServices/inSertEmployeeResponse")]
        void inSertEmployee(GUI.QLDTDDClient.eEmployee em);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/inSertEmployee", ReplyAction="http://tempuri.org/IQLDTDDServices/inSertEmployeeResponse")]
        System.Threading.Tasks.Task inSertEmployeeAsync(GUI.QLDTDDClient.eEmployee em);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/editEmployee", ReplyAction="http://tempuri.org/IQLDTDDServices/editEmployeeResponse")]
        int editEmployee(GUI.QLDTDDClient.eEmployee em);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/editEmployee", ReplyAction="http://tempuri.org/IQLDTDDServices/editEmployeeResponse")]
        System.Threading.Tasks.Task<int> editEmployeeAsync(GUI.QLDTDDClient.eEmployee em);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/searchEmployee", ReplyAction="http://tempuri.org/IQLDTDDServices/searchEmployeeResponse")]
        GUI.QLDTDDClient.eEmployee[] searchEmployee(string input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/searchEmployee", ReplyAction="http://tempuri.org/IQLDTDDServices/searchEmployeeResponse")]
        System.Threading.Tasks.Task<GUI.QLDTDDClient.eEmployee[]> searchEmployeeAsync(string input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/CheckIsExistEmployee", ReplyAction="http://tempuri.org/IQLDTDDServices/CheckIsExistEmployeeResponse")]
        bool CheckIsExistEmployee(int empid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/CheckIsExistEmployee", ReplyAction="http://tempuri.org/IQLDTDDServices/CheckIsExistEmployeeResponse")]
        System.Threading.Tasks.Task<bool> CheckIsExistEmployeeAsync(int empid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/GetAllImportCoupons", ReplyAction="http://tempuri.org/IQLDTDDServices/GetAllImportCouponsResponse")]
        GUI.QLDTDDClient.eImportCoupon[] GetAllImportCoupons();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/GetAllImportCoupons", ReplyAction="http://tempuri.org/IQLDTDDServices/GetAllImportCouponsResponse")]
        System.Threading.Tasks.Task<GUI.QLDTDDClient.eImportCoupon[]> GetAllImportCouponsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/InsertImportCoupon", ReplyAction="http://tempuri.org/IQLDTDDServices/InsertImportCouponResponse")]
        void InsertImportCoupon(GUI.QLDTDDClient.eImportCoupon im);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/InsertImportCoupon", ReplyAction="http://tempuri.org/IQLDTDDServices/InsertImportCouponResponse")]
        System.Threading.Tasks.Task InsertImportCouponAsync(GUI.QLDTDDClient.eImportCoupon im);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/GetAllImportCouponDetails", ReplyAction="http://tempuri.org/IQLDTDDServices/GetAllImportCouponDetailsResponse")]
        GUI.QLDTDDClient.eImportCouponDetail[] GetAllImportCouponDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/GetAllImportCouponDetails", ReplyAction="http://tempuri.org/IQLDTDDServices/GetAllImportCouponDetailsResponse")]
        System.Threading.Tasks.Task<GUI.QLDTDDClient.eImportCouponDetail[]> GetAllImportCouponDetailsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/InsertImportCouponDetail", ReplyAction="http://tempuri.org/IQLDTDDServices/InsertImportCouponDetailResponse")]
        void InsertImportCouponDetail(GUI.QLDTDDClient.eImportCouponDetail imde);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/InsertImportCouponDetail", ReplyAction="http://tempuri.org/IQLDTDDServices/InsertImportCouponDetailResponse")]
        System.Threading.Tasks.Task InsertImportCouponDetailAsync(GUI.QLDTDDClient.eImportCouponDetail imde);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/GetAllOrders", ReplyAction="http://tempuri.org/IQLDTDDServices/GetAllOrdersResponse")]
        GUI.QLDTDDClient.eOrder[] GetAllOrders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/GetAllOrders", ReplyAction="http://tempuri.org/IQLDTDDServices/GetAllOrdersResponse")]
        System.Threading.Tasks.Task<GUI.QLDTDDClient.eOrder[]> GetAllOrdersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/InsertOrder", ReplyAction="http://tempuri.org/IQLDTDDServices/InsertOrderResponse")]
        void InsertOrder(GUI.QLDTDDClient.eOrder o);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/InsertOrder", ReplyAction="http://tempuri.org/IQLDTDDServices/InsertOrderResponse")]
        System.Threading.Tasks.Task InsertOrderAsync(GUI.QLDTDDClient.eOrder o);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/GetAllOrderDetails", ReplyAction="http://tempuri.org/IQLDTDDServices/GetAllOrderDetailsResponse")]
        GUI.QLDTDDClient.eOrderDetail[] GetAllOrderDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/GetAllOrderDetails", ReplyAction="http://tempuri.org/IQLDTDDServices/GetAllOrderDetailsResponse")]
        System.Threading.Tasks.Task<GUI.QLDTDDClient.eOrderDetail[]> GetAllOrderDetailsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/InsertOrderDetail", ReplyAction="http://tempuri.org/IQLDTDDServices/InsertOrderDetailResponse")]
        void InsertOrderDetail(GUI.QLDTDDClient.eOrderDetail od);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/InsertOrderDetail", ReplyAction="http://tempuri.org/IQLDTDDServices/InsertOrderDetailResponse")]
        System.Threading.Tasks.Task InsertOrderDetailAsync(GUI.QLDTDDClient.eOrderDetail od);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/GetAllTelephone", ReplyAction="http://tempuri.org/IQLDTDDServices/GetAllTelephoneResponse")]
        GUI.QLDTDDClient.eTelephone[] GetAllTelephone();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/GetAllTelephone", ReplyAction="http://tempuri.org/IQLDTDDServices/GetAllTelephoneResponse")]
        System.Threading.Tasks.Task<GUI.QLDTDDClient.eTelephone[]> GetAllTelephoneAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/SearchTelephone", ReplyAction="http://tempuri.org/IQLDTDDServices/SearchTelephoneResponse")]
        GUI.QLDTDDClient.eTelephone[] SearchTelephone(string input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/SearchTelephone", ReplyAction="http://tempuri.org/IQLDTDDServices/SearchTelephoneResponse")]
        System.Threading.Tasks.Task<GUI.QLDTDDClient.eTelephone[]> SearchTelephoneAsync(string input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/insertPhone", ReplyAction="http://tempuri.org/IQLDTDDServices/insertPhoneResponse")]
        int insertPhone(GUI.QLDTDDClient.eTelephone tele);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/insertPhone", ReplyAction="http://tempuri.org/IQLDTDDServices/insertPhoneResponse")]
        System.Threading.Tasks.Task<int> insertPhoneAsync(GUI.QLDTDDClient.eTelephone tele);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/updatePhone", ReplyAction="http://tempuri.org/IQLDTDDServices/updatePhoneResponse")]
        int updatePhone(GUI.QLDTDDClient.eTelephone tele);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/updatePhone", ReplyAction="http://tempuri.org/IQLDTDDServices/updatePhoneResponse")]
        System.Threading.Tasks.Task<int> updatePhoneAsync(GUI.QLDTDDClient.eTelephone tele);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/CheckIfExistTele", ReplyAction="http://tempuri.org/IQLDTDDServices/CheckIfExistTeleResponse")]
        bool CheckIfExistTele(int teleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/CheckIfExistTele", ReplyAction="http://tempuri.org/IQLDTDDServices/CheckIfExistTeleResponse")]
        System.Threading.Tasks.Task<bool> CheckIfExistTeleAsync(int teleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/GetETelephoneByName", ReplyAction="http://tempuri.org/IQLDTDDServices/GetETelephoneByNameResponse")]
        GUI.QLDTDDClient.eTelephone GetETelephoneByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/GetETelephoneByName", ReplyAction="http://tempuri.org/IQLDTDDServices/GetETelephoneByNameResponse")]
        System.Threading.Tasks.Task<GUI.QLDTDDClient.eTelephone> GetETelephoneByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/ConvertToUnSign", ReplyAction="http://tempuri.org/IQLDTDDServices/ConvertToUnSignResponse")]
        string ConvertToUnSign(string input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/ConvertToUnSign", ReplyAction="http://tempuri.org/IQLDTDDServices/ConvertToUnSignResponse")]
        System.Threading.Tasks.Task<string> ConvertToUnSignAsync(string input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/LayTheoSLB", ReplyAction="http://tempuri.org/IQLDTDDServices/LayTheoSLBResponse")]
        int LayTheoSLB(int month, int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/LayTheoSLB", ReplyAction="http://tempuri.org/IQLDTDDServices/LayTheoSLBResponse")]
        System.Threading.Tasks.Task<int> LayTheoSLBAsync(int month, int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/ThongKeTheoTTB", ReplyAction="http://tempuri.org/IQLDTDDServices/ThongKeTheoTTBResponse")]
        double ThongKeTheoTTB(int month, int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQLDTDDServices/ThongKeTheoTTB", ReplyAction="http://tempuri.org/IQLDTDDServices/ThongKeTheoTTBResponse")]
        System.Threading.Tasks.Task<double> ThongKeTheoTTBAsync(int month, int year);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IQLDTDDServicesChannel : GUI.QLDTDDClient.IQLDTDDServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QLDTDDServicesClient : System.ServiceModel.ClientBase<GUI.QLDTDDClient.IQLDTDDServices>, GUI.QLDTDDClient.IQLDTDDServices {
        
        public QLDTDDServicesClient() {
        }
        
        public QLDTDDServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public QLDTDDServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QLDTDDServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QLDTDDServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int InsertAccount(GUI.QLDTDDClient.eAccount ac) {
            return base.Channel.InsertAccount(ac);
        }
        
        public System.Threading.Tasks.Task<int> InsertAccountAsync(GUI.QLDTDDClient.eAccount ac) {
            return base.Channel.InsertAccountAsync(ac);
        }
        
        public string getAccidbyUsername(string username) {
            return base.Channel.getAccidbyUsername(username);
        }
        
        public System.Threading.Tasks.Task<string> getAccidbyUsernameAsync(string username) {
            return base.Channel.getAccidbyUsernameAsync(username);
        }
        
        public bool CheckIsExistAccount(int accid) {
            return base.Channel.CheckIsExistAccount(accid);
        }
        
        public System.Threading.Tasks.Task<bool> CheckIsExistAccountAsync(int accid) {
            return base.Channel.CheckIsExistAccountAsync(accid);
        }
        
        public void DeleteAccount(int accid) {
            base.Channel.DeleteAccount(accid);
        }
        
        public System.Threading.Tasks.Task DeleteAccountAsync(int accid) {
            return base.Channel.DeleteAccountAsync(accid);
        }
        
        public GUI.QLDTDDClient.eEmployee[] getAllEmployee() {
            return base.Channel.getAllEmployee();
        }
        
        public System.Threading.Tasks.Task<GUI.QLDTDDClient.eEmployee[]> getAllEmployeeAsync() {
            return base.Channel.getAllEmployeeAsync();
        }
        
        public void inSertEmployee(GUI.QLDTDDClient.eEmployee em) {
            base.Channel.inSertEmployee(em);
        }
        
        public System.Threading.Tasks.Task inSertEmployeeAsync(GUI.QLDTDDClient.eEmployee em) {
            return base.Channel.inSertEmployeeAsync(em);
        }
        
        public int editEmployee(GUI.QLDTDDClient.eEmployee em) {
            return base.Channel.editEmployee(em);
        }
        
        public System.Threading.Tasks.Task<int> editEmployeeAsync(GUI.QLDTDDClient.eEmployee em) {
            return base.Channel.editEmployeeAsync(em);
        }
        
        public GUI.QLDTDDClient.eEmployee[] searchEmployee(string input) {
            return base.Channel.searchEmployee(input);
        }
        
        public System.Threading.Tasks.Task<GUI.QLDTDDClient.eEmployee[]> searchEmployeeAsync(string input) {
            return base.Channel.searchEmployeeAsync(input);
        }
        
        public bool CheckIsExistEmployee(int empid) {
            return base.Channel.CheckIsExistEmployee(empid);
        }
        
        public System.Threading.Tasks.Task<bool> CheckIsExistEmployeeAsync(int empid) {
            return base.Channel.CheckIsExistEmployeeAsync(empid);
        }
        
        public GUI.QLDTDDClient.eImportCoupon[] GetAllImportCoupons() {
            return base.Channel.GetAllImportCoupons();
        }
        
        public System.Threading.Tasks.Task<GUI.QLDTDDClient.eImportCoupon[]> GetAllImportCouponsAsync() {
            return base.Channel.GetAllImportCouponsAsync();
        }
        
        public void InsertImportCoupon(GUI.QLDTDDClient.eImportCoupon im) {
            base.Channel.InsertImportCoupon(im);
        }
        
        public System.Threading.Tasks.Task InsertImportCouponAsync(GUI.QLDTDDClient.eImportCoupon im) {
            return base.Channel.InsertImportCouponAsync(im);
        }
        
        public GUI.QLDTDDClient.eImportCouponDetail[] GetAllImportCouponDetails() {
            return base.Channel.GetAllImportCouponDetails();
        }
        
        public System.Threading.Tasks.Task<GUI.QLDTDDClient.eImportCouponDetail[]> GetAllImportCouponDetailsAsync() {
            return base.Channel.GetAllImportCouponDetailsAsync();
        }
        
        public void InsertImportCouponDetail(GUI.QLDTDDClient.eImportCouponDetail imde) {
            base.Channel.InsertImportCouponDetail(imde);
        }
        
        public System.Threading.Tasks.Task InsertImportCouponDetailAsync(GUI.QLDTDDClient.eImportCouponDetail imde) {
            return base.Channel.InsertImportCouponDetailAsync(imde);
        }
        
        public GUI.QLDTDDClient.eOrder[] GetAllOrders() {
            return base.Channel.GetAllOrders();
        }
        
        public System.Threading.Tasks.Task<GUI.QLDTDDClient.eOrder[]> GetAllOrdersAsync() {
            return base.Channel.GetAllOrdersAsync();
        }
        
        public void InsertOrder(GUI.QLDTDDClient.eOrder o) {
            base.Channel.InsertOrder(o);
        }
        
        public System.Threading.Tasks.Task InsertOrderAsync(GUI.QLDTDDClient.eOrder o) {
            return base.Channel.InsertOrderAsync(o);
        }
        
        public GUI.QLDTDDClient.eOrderDetail[] GetAllOrderDetails() {
            return base.Channel.GetAllOrderDetails();
        }
        
        public System.Threading.Tasks.Task<GUI.QLDTDDClient.eOrderDetail[]> GetAllOrderDetailsAsync() {
            return base.Channel.GetAllOrderDetailsAsync();
        }
        
        public void InsertOrderDetail(GUI.QLDTDDClient.eOrderDetail od) {
            base.Channel.InsertOrderDetail(od);
        }
        
        public System.Threading.Tasks.Task InsertOrderDetailAsync(GUI.QLDTDDClient.eOrderDetail od) {
            return base.Channel.InsertOrderDetailAsync(od);
        }
        
        public GUI.QLDTDDClient.eTelephone[] GetAllTelephone() {
            return base.Channel.GetAllTelephone();
        }
        
        public System.Threading.Tasks.Task<GUI.QLDTDDClient.eTelephone[]> GetAllTelephoneAsync() {
            return base.Channel.GetAllTelephoneAsync();
        }
        
        public GUI.QLDTDDClient.eTelephone[] SearchTelephone(string input) {
            return base.Channel.SearchTelephone(input);
        }
        
        public System.Threading.Tasks.Task<GUI.QLDTDDClient.eTelephone[]> SearchTelephoneAsync(string input) {
            return base.Channel.SearchTelephoneAsync(input);
        }
        
        public int insertPhone(GUI.QLDTDDClient.eTelephone tele) {
            return base.Channel.insertPhone(tele);
        }
        
        public System.Threading.Tasks.Task<int> insertPhoneAsync(GUI.QLDTDDClient.eTelephone tele) {
            return base.Channel.insertPhoneAsync(tele);
        }
        
        public int updatePhone(GUI.QLDTDDClient.eTelephone tele) {
            return base.Channel.updatePhone(tele);
        }
        
        public System.Threading.Tasks.Task<int> updatePhoneAsync(GUI.QLDTDDClient.eTelephone tele) {
            return base.Channel.updatePhoneAsync(tele);
        }
        
        public bool CheckIfExistTele(int teleID) {
            return base.Channel.CheckIfExistTele(teleID);
        }
        
        public System.Threading.Tasks.Task<bool> CheckIfExistTeleAsync(int teleID) {
            return base.Channel.CheckIfExistTeleAsync(teleID);
        }
        
        public GUI.QLDTDDClient.eTelephone GetETelephoneByName(string name) {
            return base.Channel.GetETelephoneByName(name);
        }
        
        public System.Threading.Tasks.Task<GUI.QLDTDDClient.eTelephone> GetETelephoneByNameAsync(string name) {
            return base.Channel.GetETelephoneByNameAsync(name);
        }
        
        public string ConvertToUnSign(string input) {
            return base.Channel.ConvertToUnSign(input);
        }
        
        public System.Threading.Tasks.Task<string> ConvertToUnSignAsync(string input) {
            return base.Channel.ConvertToUnSignAsync(input);
        }
        
        public int LayTheoSLB(int month, int year) {
            return base.Channel.LayTheoSLB(month, year);
        }
        
        public System.Threading.Tasks.Task<int> LayTheoSLBAsync(int month, int year) {
            return base.Channel.LayTheoSLBAsync(month, year);
        }
        
        public double ThongKeTheoTTB(int month, int year) {
            return base.Channel.ThongKeTheoTTB(month, year);
        }
        
        public System.Threading.Tasks.Task<double> ThongKeTheoTTBAsync(int month, int year) {
            return base.Channel.ThongKeTheoTTBAsync(month, year);
        }
    }
}
